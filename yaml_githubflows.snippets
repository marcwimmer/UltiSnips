snippet githubflow_mini_flow
# .github/workflows/flow1.yml
name: Test and Upload Pypi

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: setup merge
      run: |
        set -x
        git config --global user.email 'github-action@github.com'
        git config --global user.name 'github-action@github.com'
        git fetch

    - name: increment version
      run: |
        python3 << EOF
        import re
        from pathlib import Path
        file = Path('setup.cfg')
        lines = file.read_text()
        find = re.findall(r'version = (.*)', lines)
        old_version_string = find[-1]
        old_version = f'version = {old_version_string}'
        version = list(map(int, find[-1].split('.')))
        version[-1] += 1
        version_string = '.'.join(map(str, version))
        new_version = 'version = ' + version_string
        lines = lines.replace(old_version, new_version)
        file.write_text(lines)
        Path("wodoo/version.txt").write_text(version_string)
        EOF

    - name: commit and tag new version
      run: |
        set -x
        git fetch --tags

        COMMIT_MSG='autocommit by github action'
        if [ $(git log -n1 | grep -q "$COMMIT_MSG") ]; then
          echo "No new commit"
          echo "DO_PYPI=0" >> "$GITHUB_ENV"
        else
          git add .
          git commit -am "$COMMIT_MSG"
          VERSION=$(cat wodoo/version.txt)
          git tag ${VERSION}
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git push origin --tags
          git push
          python3 setup.py sdist
          echo "DO_PYPI=1" >> "$GITHUB_ENV"
        fi

    - name: Publish to PyPi
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
      if: env.DO_PYPI == '1'



endsnippet


snippet githubflow_using_sshkey
# .github/workflows/flow1.yml
name: Deploy fixes to other versions

on:
  push:
    branches:
      - main

permissions:
  pull-requests: write
  contents: write
  packages: write


jobs:
  merge_on_others:
    runs-on: ubuntu-latest
    name: merge last change on other branches
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 2
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Run image
      uses: CfirTsabari/actions-pipx@v1

    - name: prepare ssh folder
      run: |
        mkdir ~/.ssh
        chmod a-rwx ~/.ssh
        chmod u+rwx ~/.ssh
        ls -lhtra ~
        echo "${{ secrets.SSHKEY }}" > ~/.ssh/id_rsa
        chmod 400 ~/.ssh/id_rsa
        ls -lhtra ~/.ssh

    - name: checkout main branch
      run: |
        set -x
        git config user.email 'github-action'
        git config user.name 'github-action'
        git checkout main
        cat ~/.ssh/id_rsa
        git remote set-url origin git@github.com:$GITHUB_REPOSITORY
        git checkout main
        git fetch
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: Odoo-Ninjas/zebroo-sync-dev

    - name: deploy to branches
      run: |
        for branch in $DEPLOY_BRANCHES; do
          git checkout $branch -f
          pipx run gimera apply -u -I
          if [[ -n $(git status -s) ]]; then
            git commit -m "github action updated version"
            git push
          fi
        done
      env:
        DEPLOY_BRANCHES: "11.0 13.0 14.0 15.0 16.0"

endsnippet